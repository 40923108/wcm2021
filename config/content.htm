<h1>Topics</h1>
<p>Github個人倉儲：<a href="https://github.com/40923108/wcm2021">https://github.com/40923108/wcm2021</a></p>
<p>Heroku：<a href="https://dashboard.heroku.com/apps/a40923108">https://dashboard.heroku.com/apps/a40923108</a></p>
<p>             <a href="https://a40923108.herokuapp.com/content/index.html">https://a40923108.herokuapp.com/content/index.html</a></p>
<p>Fossil：</p><h2>W1</h2>
<p>This is <a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></p>
<p>目前的 cmsimde 在編輯器下方新增一個 csave 按鈕, 意即 collabrative save, 當動態網際管理系統在多人同時維護登入維護網頁內容時, 編輯各頁面時段, 該頁面可能已經改版, 因此使用 csave 按鈕存檔時, 會導入當下最新的該頁面內容, 並試圖與編輯中的頁面內容進行合併.</p>
<p>使用 csave 按鈕存檔無法刪除頁面資料.</p>
<p>使用 Edit All 模式, 無法使用 csave 按鈕（尚未測試).</p>
<p></p>
<h2>W2</h2>
<p>建立倉儲 <a href="https://github.com/40923108/wcm2021">https://github.com/40923108/wcm2021</a></p>
<p>cmsimde <a href="https://40923108.github.io/wcm2021/content/index.html">https://40923108.github.io/wcm2021/content/index.html</a></p>
<h2>W3</h2>
<p><a href="http://mde.tw/cmstemplate">http://mde.tw/cmstemplate</a></p>
<p>mdecourse 作為協同者之後:</p>
<p>git clone --recurse-submodules <a href="https://github.com/40923108/wcm2021.git">https://github.com/40923108/wcm2021.git</a> 08</p>
<p>cd 08</p>
<p>cd cmsimde</p>
<p>git checkout 1c3aeec</p>
<p>然後 acp "add w3 page"</p>
<h2>WCM倉儲</h2>
<p>搜尋<span style="color: #0000ff;"> </span><span><span style="color: #0000ff;">fossil scm</span> 接著 Download</span></p>
<p><span><img alt="" height="241" src="/images/W2.png" width="800"/></span></p>
<p><span>注意：</span><span></span><span style="background-color: #ffff00;">須將此檔案存在y槽</span></p>
<p><span><img alt="" height="458" src="/images/W3.png" width="770"/></span></p>
<p><span></span>建立一個資料夾為<span><span> </span><span style="color: #0000ff;">fossil</span></span></p>
<p>接這輸入<span>:</span> <span style="color: #0000ff;">fossil clone https://學號@fossil.kmol.info/u/學號 學號.fossil</span></p>
<p><span><img alt="" height="173" src="/images/w5.png" width="800"/></span></p>
<p>y槽/tmp/fossil 會出現<span> </span><span style="color: #0000ff;">學號.fossil</span></p>
<p><span><img alt="" height="351" src="/images/W5-2.png" width="800"/></span></p>
<p><span></span>需要再建立一個<span style="color: #0000ff;">wd</span>的資料夾</p>
<p>在wd底下再建立一個<span style="color: #0000ff;">自己學號</span>的資料夾</p>
<p>為了開啟檔案輸入：<span style="color: #0000ff;">fossil open ./../../學號.fossil</span></p>
<p><span>是為了跟遠端連接有一個壓縮檔案紀錄版本</span></p>
<p><img alt="" height="387" src="/images/W4-2.png" width="1125"/></p>
<p>y槽/tmp/fossil/wd/學號資料夾 會出現<span style="color: #0000ff;">_FOSSIL_</span></p>
<p><img alt="" height="325" src="/images/W4-5.png" width="800"/></p>
<p>註：出現&lt;unnamed&gt;原因是沒在WCM測試倉儲中更改名稱</p>
<p><img alt="" height="237" src="/images/W4-4.png" width="800"/></p>
<p></p>
<p><img alt="" height="270" src="/images/W4-3.png" width="800"/></p>
<p></p>
<p>接著在<span style="color: #000000;">wd</span>的目錄下<span style="color: #0000ff;">clone github</span>帳號</p>
<p><span>輸入指令：</span><span style="color: #0000ff;">git clone --recurse-submodules https://github.com/學號/倉儲名稱.git</span></p>
<p><img alt="" height="463" src="/images/W7.png" width="800"/></p>
<p>接著把整個<span>wcm2021</span>內的資料全部複製到<span>學號資料夾</span>內</p>
<p>注意：<span style="background-color: #ffff00;">須注意是否有重疊檔案，避免被覆改掉</span></p>
<p>為了新增所有資料</p>
<p><span style="color: #0000ff;">cd 學號</span></p>
<p><span style="color: #0000ff;">fossil add .</span></p>
<p><img alt="" height="482" src="/images/W8.png" width="900"/></p>
<p>註：<span style="background-color: #ffff00;">假如中間改版有刪除檔案或目錄，需改成 <span style="color: #0000ff;">fossil addremove</span></span></p>
<p><span style="color: #0000ff;">fossil add . </span>是沒有刪除資料所需要打的</p>
<p><span style="color: #0000ff;">fossil commit -m "initial add"</span><span> </span>提交資料</p>
<p><span style="color: #0000ff;">a</span><span> </span><span>為全部推送</span></p>
<p><img alt="" height="473" src="/images/W9.png" width="900"/></p>
<p><img alt="" height="427" src="/images/w10.png" width="900"/></p>
<p>完成同步</p>
<p></p>
<h2>SSH設定</h2>
<p>設定SSH</p>
<p><img alt="" height="435" src="/images/2.png" width="1056"/></p>
<p>產生Key用puttygen.exe</p>
<p>設session用putty</p>
<p>按Generate後滑鼠在視窗上隨意跑動</p>
<p><img alt="" height="580" src="/images/2 - 複製.png" width="639"/></p>
<p>複製至Github</p>
<p><img alt="" height="855" src="/images/3.png" width="1569"/></p>
<p>新增新的SSH KEY</p>
<p><img alt="" height="566" src="/images/4.png" width="1041"/></p>
<p>貼上剛剛所複製的 再按 Add SSH key</p>
<p>註:Title多半用自己學號</p>
<p><img alt="" height="582" src="/images/5 - 複製.png" width="1586"/></p>
<p>注意:需存成ppk類型需存成ppk類型</p>
<p>接著換設定P接著換設定 putty.exe</p>
<p><img alt="" height="540" src="/images/6.png" width="605"/></p>
<p><img alt="" height="544" src="/images/7.png" width="605"/></p>
<p>用自己網路 Proxy type 要用None</p>
<p><em>若用學校網路則Proxy type:HTTP ➨Proxy hostname:[2001:288:6004:17::69] ➨Port:3128</em></p>
<p>接著按SSH ➨Auth ➨Browse新增設定的Private key </p>
<p>須注意它的位置在哪個磁碟 點選錯誤會導致無法推送</p>
<p><em><img alt="" height="549" src="/images/8.png" width="622"/></em></p>
<p>設定好後須回Session按 save</p>
<p>將config將config拉到白窗</p>
<p>註:config 在.git 內</p>
<p><img alt="" height="502" src="/images/8-3.png" width="700"/></p>
<p><em></em>新增第二行url將第一行的url 加個#</p>
<p><img alt="" height="790" src="/images/8-4.png" width="705"/></p>
<p>新增新的一行plink</p>
<p>即可push</p>
<h2>Heroku</h2>
<p>1.用學校帳號先登錄heroku帳號，並建立一個<span style="color: #0000ff;">a+學號<span style="color: #000000;">的app，即可透過https://a學號.herokuapp.com取得原始內容。</span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;">2.到<span> </span><a href="http://a.kmol.info:88/heroku.7z">http://a.kmol.info:88/heroku.7z</a>下載<span style="background-color: #ffff00;">heroku</span>解開至隨身碟</span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;">3.<span>修改命令搜尋路徑：</span><span> 修改隨身系統的啟動批次檔案，讓 Windows 的命令視窗中可以執行 heroku.exe，（將 heroku.exe 所在目錄位置, 設為 Windows 搜尋路徑之一），再重新啟動start_ipv4 / ipv6.bat</span></span></span></p>
<p><span style="color: #0000ff;"><span style="color: #000000;"><span>4.測試是執行因此輸入<span style="color: #0000ff;">heroku version</span> 若回應所使用的版本表示上述路徑設定已經成功</span></span></span></p>
<p>5.設定heroku代理主機 <span>在 y:\home_ipv6 下的 .giconfig 中,  以 git config --global http.proxy <span style="color: #0000ff;">"http://your_proxy:port"</span> 進行設定</span></p>
<p><span><img alt="" height="221" src="/images/hhhhh.png" width="900"/></span></p>
<p><span>6.設定同步藉由藉由 git remote add (Heroku 指令為 <span style="color: #0000ff;">heroku git:remote -a heroku_倉儲_名稱</span>, 之後只要在 heroku login 狀態下, 可以直接利用 git push) 在近端設定一個連線到 Heroku 倉儲的代號</span></p>
<p><img alt="" height="471" src="/images/hh.png" width="900"/></p>
<p><img alt="" height="472" src="/images/hhh.png" width="900"/></p>
<p></p>
<p>重啟小黑窗</p>
<p>打cd tmp</p>
<p>cd 08(倉儲名稱)</p>
<p><span style="color: #0000ff;">heroku login-1</span></p>
<p>接著打上herohu帳號密碼</p>
<p><span style="color: #0000ff;">heroku login -a a40923108(名稱)</span></p>
<p>最後<span style="color: #0000ff;">git push heoku</span></p>
<p></p>
<p><img alt="" height="641" src="/images/H1.png" width="1210"/></p>
<p><img alt="" height="625" src="/images/H3.png" width="1201"/></p>
<p><img alt="" height="642" src="/images/H2.png" width="1224"/></p>
<p><img alt="" height="646" src="/images/H4.png" width="1231"/></p>
<h2>Robodk</h2>
<p>先到a.kmol.info:88下載 <span style="background-color: #ffff00;">robodk522_portable</span></p>
<p><img alt="" height="285" src="/images/R3.png" width="667"/></p>
<p><span style="background-color: #ffff00;">開啟此檔後&gt;點bin&gt;RoboDK.exe</span></p>
<p><img alt="" height="293" src="/images/R6.png" width="520"/></p>
<p>接著點選文件&gt;打開&gt;examples&gt;pick_and_place&gt;選取所有檔案後按 開啟</p>
<p></p>
<p>會出現此畫面</p>
<p><img alt="" height="293" src="/images/R7.png" width="520"/></p>
<p>註:按+ -號可以更改坐標系的大小</p>
<p><span style="background-color: #ffff00;"></span>在編輯器中輸入 <span style="background-color: #ffff00;">pip install robodk</span></p>
<p><span style="background-color: #ffff00;"><img alt="" height="642" src="/images/R1.png" width="1227"/></span></p>
<p>把 pip_and_place.py拉至白窗&gt;tools&gt;go</p>
<p>機械手臂即可運作。</p>
<p>操作影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NQEYueDJKbE" width="560"></iframe></p>
<h2>OBS+Youtube</h2>
<p><img alt="" height="163" src="/images/OBS1.png" width="1000"/></p>
<p><img alt="" height="159" src="/images/OBS2.png" width="1000"/></p>
<p>按進行直播 即可開始</p>
<p>但是首次直播者，需先手機號碼認證，24小時後完成驗證才可開始直播。</p>
<p></p>
<h1>問題</h1>
<h2>Python</h2>
<p>在要進入python時進入不了</p>
<p><img alt="" height="126" src="/images/錯誤.png" width="632"/></p>
<p>解決方式</p>
<p>只要在cmsimde裡多localhost.crt和<span>localhost.key<img alt="" height="493" src="/images/問題.png" width="500"/></span></p>
<h2>PUSH</h2>
<p><span>在推送時出現此段文字 </span></p>
<p><span>unable to access 'https://github.com/40923108/wcm2021.git/': Failed to connect to 2001:288:6004:17::69 port 3128: Network unreachable</span></p>
<p><span><img alt="" height="282" src="/images/推送不了.png" width="500"/></span></p>
<p><span>解決方法 </span></p>
<p><span>發現在自己電腦推送，沒有改Proxy，只要在.gitconfig裡的proxy加上#即可。</span></p>
<p><span>註:.gitconfig在home裡</span></p>
<p><br/><span><img alt="" height="667" src="/images/e.png" width="561"/></span><br/><br/></p>
<p></p>
<h1>筆記</h1>
<h2>更新</h2>
<p>cd tmp</p>
<p>cd 08</p>
<p>cd cmsimde</p>
<p>git pull origin master</p>
<p>即可完成</p>
<p><img alt="" height="641" src="/images/1.png" width="1210"/></p>
<h2>fossil靜態網頁</h2>
<p><span style="color: #0000ff;"><span style="color: #000000;">搜尋：</span><a href="https://fossil.kmol.info/u/學號/doc/trunk/index.html">https://fossil.kmol.info/u/學號/doc/trunk/index.html</a></span></p>
<p><span style="color: #000000;"><span color="#0000ff" style="color: #0000ff;">改版方式 cms</span></span></p>
<h1>分組</h1>
<h2>教室排課表</h2>
<p>電腦輔助設計室排課表</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">import requests
import bs4
# for os.environ and os.system
import os
# for geting html file path
import pathlib
  
# for pythn 3.9
proxy = 'http://[2001:288:6004:17::69]:3128'
  
os.environ['http_proxy'] = proxy 
os.environ['HTTP_PROXY'] = proxy
os.environ['https_proxy'] = proxy
os.environ['HTTPS_PROXY'] = proxy
  
'''
url:  'jclassroom_ajax.php',
data: { pselyr: pselyr, pselclssroom: pselclssroom },
'''
semester = '1092'
classroomno = 'BGA0710'
column = True
  
if semester == None:
    semester = '1092'
if classroomno == None:
    # BGA0810 電腦輔助設計室
    classroomno = 'BGA0710'
      
headers = {'X-Requested-With': 'XMLHttpRequest'}
  
url = 'https://qry.nfu.edu.tw/jclassroom_ajax.php'
post_var = {'pselyr': semester, 'pselclssroom': classroomno}
  
result = requests.post(url, data = post_var, headers = headers)
  
soup = bs4.BeautifulSoup(result.content, 'lxml')
  
# 先除掉所有 anchor
for a in soup.findAll('a'):
    # bs3 語法
    #a.replaceWithChildren()
    # bs4 語法, 將標註與內容拆開
    a.unwrap()
  
# 根據輸出設定, 取出 class='tbcls' 的 table 資料
table = soup.find('table', {'class': 'tbcls'})
  
# 重建 table, 設定邊線為 1 pixel
output = "&lt;table border='1'&gt;"
  
for i in table.contents:
    # 利用 replace 復原  
    output += str(i).replace(" ", " ")
output += "&lt;/table&gt;"
#print(output)
  
# 將 output 寫入 w1_classroom.html
fileName = "w1_classroom.html"
with open(fileName, "w", encoding="utf-8") as file:
    file.write(output)
# 利用 os.system() 以 default browser 開啟 w1_class_local.html
filePath = pathlib.Path(__file__).parent.absolute()
#print(filePath)
# set firefox as default browser and start url to open html file
os.system("start file:///" + str(filePath) + "\\" + fileName)</pre>
<p></p>
<p>每一間都有屬於自己的教室編碼</p>
<p>要在classroomno 打出相對的教室編碼</p>
<p>即能查出課表<img alt="" height="1003" src="/images/19.png" width="1016"/></p>
<h2>分組連結</h2>
<p><span style="background-color: #00ffff;">wcm2021-ag1</span></p>
<p>組長</p>
<p><a href="https://40923135.github.io/wcm2021/content/index.html">40923135 web</a> | <a href="https://github.com/40923135/wcm2021">40923135 repo</a></p>
<p>組員</p>
<p><a href="https://40923101.github.io/wcm2021">40923101 web</a> | <a href="https://github.com/40923101/wcm2021">40923101 repo</a></p>
<p><a href="https://40923108.github.io/wcm2021/content/index.html">40923108 web</a> | <a href="https://github.com/40923108/wcm2021">40923108 repo</a></p>
<p><a href="https://40923142.github.io/wcm2021/content/index.html">40923142 web</a> | <a href="https://github.com/40923142/wcm2021">40923142 repo</a></p>
<p>分組網站</p>
<p><a href="https://40923135.github.io/wcm2021-ag1/content/index.html">ag1 web</a> | <a href="https://github.com/40923135/wcm2021-ag1">ag1 repo</a></p>
<p><span style="color: #000000; background-color: #00ffff;">wcm2021分組超文件處理程式：</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># wcm2021_gen_html.py
studList = "wcm2021_list.txt"
courTitle = "wcm2021"

# group title initial
grpTitle = studList[:6] + "-" + studList[7] + "g"

# student Account and github Account as inputs
def perWeb(s, g):
    pSite = "&lt;a href=\"https://" + g + ".github.io/" + courTitle + "\"&gt;" + s + " web&lt;/a&gt;"
    print(pSite)

def perRepo(s, g):
    pSite = "&lt;a href=\"https://github.com/" + g + "/" + courTitle + "\"&gt;" + s + " repo&lt;/a&gt;"
    print(pSite)
    
def grpWeb(s, g, ord):
    pSite = "&lt;a href=\"https://" + g + ".github.io/" + grpTitle + str(ord) + "\"&gt;grp web&lt;/a&gt;"
    print(pSite)
    
def grpRepo(s, g, ord):
    pSite = "&lt;a href=\"https://github.com/" + g + "/" + grpTitle + str(ord) + "\"&gt;grp repo&lt;/a&gt;"
    print(pSite)

# open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
with open(studList) as fh:
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()

grpCount = 0
for i in range(len(data)):
    # grpCount is the group order
    grpCount = grpCount + 1
    group = data[i].rstrip("\n").split("\t")
    # use filter to remove vacant string element
    # use [1:] to remove first element
    group = list(filter(None, group))[1:]
    print(grpTitle + str(grpCount) + "&lt;br /&gt;")
    for j in range(0, len(group), 2):
        # s is the student number
        s = group[j]
        # g is the github account
        g = group[j+1]
        perWeb(s, g)
        print("|")
        perRepo(s, g)
        print("|")
        grpWeb(s, g, grpCount)
        print("|")
        grpRepo(s, g, grpCount)
        print("&lt;br /&gt;")</pre>
<p></p>